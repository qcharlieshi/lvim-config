-- The ASCII caracters used in the animation
-- ⠀⠁⠂⠃⠄⠅⠆⠇⠈⠉⠊⠋⠌⠍⠎⠏
-- ⠐⠑⠒⠓⠔⠕⠖⠗⠘⠙⠚⠛⠜⠝⠞⠟
-- ⠠⠡⠢⠣⠤⠥⠦⠧⠨⠩⠪⠫⠬⠭⠮⠯
-- ⠰⠱⠲⠳⠴⠵⠶⠷⠸⠹⠺⠻⠼⠽⠾⠿
-- ⡀⡁⡂⡃⡄⡅⡆⡇⡈⡉⡊⡋⡌⡍⡎⡏
-- ⡐⡑⡒⡓⡔⡕⡖⡗⡘⡙⡚⡛⡜⡝⡞⡟
-- ⡠⡡⡢⡣⡤⡥⡦⡧⡨⡩⡪⡫⡬⡭⡮⡯
-- ⡰⡱⡲⡳⡴⡵⡶⡷⡸⡹⡺⡻⡼⡽⡾⡿
-- ⢀⢁⢂⢃⢄⢅⢆⢇⢈⢉⢊⢋⢌⢍⢎⢏
-- ⢐⢑⢒⢓⢔⢕⢖⢗⢘⢙⢚⢛⢜⢝⢞⢟
-- ⢠⢡⢢⢣⢤⢥⢦⢧⢨⢩⢪⢫⢬⢭⢮⢯
-- ⢰⢱⢲⢳⢴⢵⢶⢷⢸⢹⢺⢻⢼⢽⢾⢿
-- ⣀⣁⣂⣃⣄⣅⣆⣇⣈⣉⣊⣋⣌⣍⣎⣏
-- ⣐⣑⣒⣓⣔⣕⣖⣗⣘⣙⣚⣛⣜⣝⣞⣟
-- ⣤⣡⣢⣣⣤⣥⣦⣧⣨⣩⣪⣫⣬⣭⣮⣯
-- ⣰⣱⣲⣳⣴⣵⣶⣷⣸⣹⣺⣻⣼⣽⣾⣿

-- The majority of the function are in the end

local M = {}

M.shouldPlayAnimation = true
M.lastRenderedFrame = nil

M.frames = {
  [[
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀ ⢠⡄⠀ ⠀⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀ ⣠⣿⣿⣆ ⠀⠀⠀⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀ ⡰⠿⠿⠿⠿⢆⠀ ⠀⠀⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀ ⣴⣷⡀⠀⠀⢀⣾⣦⠀⠀ ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀ ⣼⣿⣿⣷⡀⢀⣾⣿⣿⣧  ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀ ⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁ ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀ ⢠⡄⠀ ⠀⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀ ⣠⣿⣿⣆ ⠀⠀⠀⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀ ⡰⠿⠿⠿⠿⢆⠀ ⠀⠀⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀ ⣴⣷⡀⠀⠀⢀⣾⣦⠀⠀ ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀ ⣼⣿⣿⣷⡀⢀⣾⣿⣿⣧  ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀ ⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁ ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀ ⢠⡄⠀ ⠀⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀ ⣠⣿⣿⣆ ⠀⠀⠀⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀ ⡰⠿⠿⠿⠿⢆⠀ ⠀⠀⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀ ⣴⣷⡀⠀⠀⢀⣾⣦⠀⠀ ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀ ⣼⣿⣿⣷⡀⢀⣾⣿⣿⣧  ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀ ⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁ ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀ ⢠ ⠀ ⠀⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀  ⣾⣇ ⠀⠀ ⠀⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀  ⡰⠿⠿⢆⠀ ⠀ ⠀⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀  ⣴⣷ ⠀⣾⣦⠀⠀  ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀  ⣼⣿⣷⡀⢀⣿⣿⣧   ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀  ⠈⠉⠉⠉⠉⠉⠉⠉⠉⠁  ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀  
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀ ⢠⠀ ⠀⠀  ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀  ⣾⣇ ⠀⠀ ⠀⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀  ⡰⠿⠿⠀ ⠀ ⠀ ⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀  ⢀⣷  ⣷⠀⠀   ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀   ⣿⣿⡀⢀⣿⣧    ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀   ⠉⠉⠉⠉⠉⠉⠉⠁   ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀  
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀  ⢠⠀⠀ ⠀  ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀  ⣾ ⠀ ⠀ ⠀ ⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀  ⡰⠿⠀ ⠀⠀   ⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀   ⣷ ⣷⠀⠀    ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀   ⡰⣿⢀⣿      ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀    ⠉⠉⠉⠉⠁   ⠀  ⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀ ⠀⢠⡄ ⠀ ⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀  ⢸⡇ ⠀ ⠀ ⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀   ⠸⠇⠀  ⠀⠀ ⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀    ⢸⡆⠀     ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀     ⢸⡇      ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀      ⠈⠁    ⠀  ⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀  
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀ ⠀⠀ ⡄⠀⠀   ⠈⢿⣿⣏⢀⡀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀ ⠀  ⣿ ⠀⠀  ⠀⠈⢿⣿⡁ ⣁⡀⠀ ⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀ ⠀   ⠿⢆⠀⠀⠀  ⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀    ⣾ ⣾⠀    ⠀⠀⣿⣿⡦⠀⠀⠀⠀ 
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀     ⣿⡀⣿⢆    ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀      ⠉⠉⠉⠉  ⠀  ⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀  
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀  ⡄⠀ ⠀⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀  ⣰⣿ ⠀⠀ ⠀ ⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀   ⠿⠿⢆ ⠀ ⠀ ⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀   ⣾  ⣾⡀⠀   ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀   ⣼⣿⡀⢀⣿⣿    ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀   ⠈⠉⠉⠉⠉⠉⠉⠉   ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀  ⡄⠀ ⠀⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀  ⣰⣿ ⠀⠀ ⠀⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀  ⡰⠿⠿⢆⠀ ⠀ ⠀⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀  ⣴⣷ ⠀⣾⣦⠀⠀  ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀  ⣼⣿⣿⡀⢀⣿⣿⣧   ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀  ⠈⠉⠉⠉⠉⠉⠉⠉⠉⠁  ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
}

M.asciiImg = M.frames[1]

M.ascii = function(counting, callback)
  if not M.shouldPlayAnimation then
    return
  end

  -- local frameCount = #frames < math.floor(counting) and frames[#frames] or frames[math.floor(counting)]
  M.asciiImg = #M.frames < math.floor(counting) and M.frames[#M.frames] or M.frames[math.floor(counting)]

  -- Only update dashboard if the frame actually changed
  if M.asciiImg ~= M.lastRenderedFrame then
    M.lastRenderedFrame = M.asciiImg
    Snacks.dashboard.update()
  end

  if counting >= #M.frames + 1 then
    callback(callback)
  end
end

M.theAnimation = function(callback)
  require("snacks").animate(1, #M.frames + 1, function(value, ctx)
    M.ascii(value, callback)
  end, {
    duration = 150,
    fps = 24, -- Reduced from 60 to 24 FPS - still smooth but 2.5x less CPU
  })
end

return M
